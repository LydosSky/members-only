* Project
An Exclusive clubhose where members can write anonymous posts.
Inside the clubhouse, members can see who the author of a post
is, but outside they can only see the story and wonder who wrote
it
** NPM Packages
These are the packages that will be used.

#+begin_src shell
npm init -y

npm install --save express morgan dotenv pug pg express-async-handler express-validator express-session passport passport-local bcryptjs
npm install --save-dev nodemon eslint node-pg-migrate
#+end_src

** Database
Create a new database for project

#+begin_src sql
CREATE DATABASE members_only;
#+end_src

*** Database Tables
**** Users Table
#+begin_src sql
CREATE TABLE IF NOT EXISTS users (
  id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
  firstname VARCHAR(255) NOT NULL,
  lastname VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  password_hash VARCHAR(255) NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
)
INSERT INTO users (firstname, lastname, email, password_hash) VALUES ();
#+END_src
**** Posts Table
#+begin_src sql
CREATE TABLE IF NOT EXISTS posts (
  id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
  user_id INTEGER REFERENCES users(id),
  post TEXT NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);
#+end_src
**** Roles Table
#+begin_src sql
CREATE TABLE IF NOT EXISTS roles (
  id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
  role_name VARCHAR(255) UNIQUE NOT NULL
);

INSERT INTO roles (role_name) VALUES ('admin');
INSERT INTO roles (role_name) VALUES ('member');
#+end_src
**** User Roles Table
#+begin_src sql
CREATE TABLE IF NOT EXISTS user_roles (
  user_id INTEGER REFERENCES users(id),
  role_id INTEGER REFERENCES roles(id),
  PRIMARY KEY (user_id, role_id)
)
#+end_src
** Code
*** Views
- [ ] Sign-up form
- [ ] Log-in form
- [ ] Posts
- [ ] Member
- [ ] Admin
*** Database
- [ ] Users
- [ ] Posts
*** Controllers
- [ ] Users
- [ ] Posts
*** Routes
- [ ] Posts
- [ ] Users
